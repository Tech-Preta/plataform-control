{
  "version": 4,
  "terraform_version": "1.12.1",
  "serial": 51,
  "lineage": "d5f55f75-ff18-71a2-2b30-8957391bb7a3",
  "outputs": {
    "control_plane": {
      "value": [
        {
          "ipv4_address": "10.191.0.3",
          "mac_address": "10:66:6a:9c:1f:ab",
          "name": "control-plane-0cf93cfe"
        }
      ],
      "type": [
        "tuple",
        [
          [
            "object",
            {
              "ipv4_address": "string",
              "mac_address": "string",
              "name": "string"
            }
          ]
        ]
      ]
    },
    "worker": {
      "value": [
        {
          "ipv4_address": "10.191.0.4",
          "mac_address": "10:66:6a:94:43:8e",
          "name": "worker-e00c8dfe"
        }
      ],
      "type": [
        "tuple",
        [
          [
            "object",
            {
              "ipv4_address": "string",
              "mac_address": "string",
              "name": "string"
            }
          ]
        ]
      ]
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "kubeconfig",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4849024227380624461",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "module.control_plane.data.cloudinit_config.this",
            "module.control_plane.incus_instance.this",
            "module.control_plane.random_id.this",
            "null_resource.wait",
            "random_bytes.token"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "wait",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4711025273714400907",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "module.control_plane.data.cloudinit_config.this",
            "module.control_plane.incus_instance.this",
            "module.control_plane.random_id.this",
            "random_bytes.token"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_bytes",
      "name": "token",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64": "p+3GccflZYQ0k1iUX3tR3KWREWJ8Atldzye09xcPuSI=",
            "hex": "a7edc671c7e56584349358945f7b51dca59111627c02d95dcf27b4f7170fb922",
            "keepers": null,
            "length": 32
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "base64"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "hex"
              }
            ]
          ],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.control_plane[0]",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": false,
            "boundary": "MIMEBOUNDARY",
            "gzip": false,
            "id": "3246659667",
            "part": [
              {
                "content": "#cloud-config\npackage_update: true\npackage_upgrade: true\npackages:\n  - curl\n  - jq\n  - tcpdump\n\nwrite_files:\n  - path: /usr/local/bin/wait-for-node-ready.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/sh\n      until (curl -sL http://localhost:10248/healthz) \u0026\u0026 [ $(curl -sL http://localhost:10248/healthz) = \"ok\" ];\n        do sleep 10 \u0026\u0026 echo \"Wait for $(hostname) kubelet to be ready\"; done;\n  - path: /usr/local/bin/install-or-upgrade-rke2.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/bash\n      set -e\n\n      # Fetch target and actual version if already installed\n      export INSTALL_RKE2_VERSION=v1.33.1+rke2r1\n            which rke2 \u003e/dev/null 2\u003e\u00261 \u0026\u0026 RKE2_VERSION=$(rke2 --version|head -1|cut -f 3 -d \" \")\n\n      # Install or upgrade\n      if ([ -z \"$RKE2_VERSION\" ]) || ([ -n \"$INSTALL_RKE2_VERSION\" ] \u0026\u0026 [ \"$INSTALL_RKE2_VERSION\" != \"$RKE2_VERSION\" ]); then\n        echo \"Installing RKE2 version $INSTALL_RKE2_VERSION\"\n        curl -sfL https://get.rke2.io | sh -\n        echo \"RKE2 installation completed\"\n      else\n        echo \"RKE2 already installed: $RKE2_VERSION\"\n      fi\n  - path: /etc/rancher/rke2/config.yaml\n    permissions: \"0600\"\n    owner: root:root\n    encoding: base64\n    content: IyBkb2NzIHJlZjogaHR0cHM6Ly9kb2NzLnJrZTIuaW8vcmVmZXJlbmNlL3NlcnZlcl9jb25maWcKCiMgQ29tbW9uCmNvbmZpZzogL2V0Yy9yYW5jaGVyL3JrZTIvY29uZmlnLnlhbWwKZGVidWc6IGZhbHNlCmRhdGEtZGlyOiAiL3Zhci9saWIvcmFuY2hlci9ya2UyIgoKIyBMaXN0ZW5lcgphZHZlcnRpc2UtYWRkcmVzczogIjEwLjE5MS4wLjk5Igp0bHMtc2FuOgogIC0gIjEwLjE5MS4wLjk5Igp0bHMtc2FuLXNlY3VyaXR5OiB0cnVlCgojIE5ldHdvcmtpbmcKY2x1c3Rlci1jaWRyOiAiMTcyLjE2LjAuMC8xMyIKc2VydmljZS1jaWRyOiAiMTcyLjI4LjAuMC8xNiIKc2VydmljZS1ub2RlLXBvcnQtcmFuZ2U6ICIzMDAwMC0zMjc2NyIKY2x1c3Rlci1kbnM6ICIxNzIuMjguMC4xMCIKY2x1c3Rlci1kb21haW46ICJjbHVzdGVyLmxvY2FsIgplZ3Jlc3Mtc2VsZWN0b3ItbW9kZTogImRpc2FibGVkIgpzZXJ2aWNlbGItbmFtZXNwYWNlOiAia3ViZS1zeXN0ZW0iCmNuaTogbm9uZQoKIyBDbGllbnQKd3JpdGUta3ViZWNvbmZpZzogIi9ldGMvcmFuY2hlci9ya2UyL3JrZTIueWFtbCIKd3JpdGUta3ViZWNvbmZpZy1tb2RlOiAiNjAwIgoKIyBDbHVzdGVyCnRva2VuOiAiYTdlZGM2NzFjN2U1NjU4NDM0OTM1ODk0NWY3YjUxZGNhNTkxMTE2MjdjMDJkOTVkY2YyN2I0ZjcxNzBmYjkyMiIKc2VydmVyOiAiaHR0cHM6Ly8xMC4xOTEuMC45OTo5MzQ1IgoKIyBTZXJ2ZXIgUm9sZXMKZGlzYWJsZS1hcGlzZXJ2ZXI6IGZhbHNlCmRpc2FibGUtY29udHJvbGxlci1tYW5hZ2VyOiBmYWxzZQpkaXNhYmxlLXNjaGVkdWxlcjogZmFsc2UKZGlzYWJsZS1ldGNkOiBmYWxzZQoKIyBGbGFncwoKIyBDb21wb25lbnRzCmRpc2FibGU6CiAgLSAicmtlMi1pbmdyZXNzLW5naW54IgogIC0gInJrZTItbWV0cmljcy1zZXJ2ZXIiCiAgLSAicmtlMi1jb3JlZG5zIgpkaXNhYmxlLXNjaGVkdWxlcjogZmFsc2UKZGlzYWJsZS1jbG91ZC1jb250cm9sbGVyOiB0cnVlCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQplbmFibGUtc2VydmljZWxiOiBmYWxzZQoKIyBBZ2VudC9Ob2RlCm5vZGUtdGFpbnQ6CiAgLSBub2RlLXJvbGUua3ViZXJuZXRlcy5pby9jb250cm9sLXBsYW5lOk5vU2NoZWR1bGUKICAtIG5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL2V0Y2Q6Tm9FeGVjdXRlCgojIEFnZW50L0ZsYWdzCg==\n\n\n\n\nruncmd:\n  - /usr/local/bin/install-or-upgrade-rke2.sh\n  - systemctl daemon-reload\n  - [ sh, -c, 'sed -i \"/^server:/d\" /etc/rancher/rke2/config.yaml']\n  - systemctl enable rke2-server.service\n  - systemctl start rke2-server.service\n  - [ sh, -c, 'until [ -f /etc/rancher/rke2/rke2.yaml ]; do echo Waiting for rke2 to start \u0026\u0026 sleep 10; done;' ]\n  - [ sh, -c, 'until [ -x /var/lib/rancher/rke2/bin/kubectl ]; do echo Waiting for kubectl bin \u0026\u0026 sleep 10; done;' ]\n  - cp /etc/rancher/rke2/rke2.yaml /etc/rancher/rke2/rke2-remote.yaml\n  - KUBECONFIG=/etc/rancher/rke2/rke2-remote.yaml /var/lib/rancher/rke2/bin/kubectl config set-cluster default --server https://10.191.0.99:6443\n  - KUBECONFIG=/etc/rancher/rke2/rke2-remote.yaml /var/lib/rancher/rke2/bin/kubectl config rename-context default peter\n",
                "content_type": "text/cloud-config",
                "filename": "cloud-config.yaml",
                "merge_type": "list(append)+dict(recurse_array)+str()"
              }
            ],
            "rendered": "Content-Type: multipart/mixed; boundary=\"MIMEBOUNDARY\"\nMIME-Version: 1.0\r\n\r\n--MIMEBOUNDARY\r\nContent-Disposition: attachment; filename=\"cloud-config.yaml\"\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/cloud-config\r\nMime-Version: 1.0\r\nX-Merge-Type: list(append)+dict(recurse_array)+str()\r\n\r\n#cloud-config\npackage_update: true\npackage_upgrade: true\npackages:\n  - curl\n  - jq\n  - tcpdump\n\nwrite_files:\n  - path: /usr/local/bin/wait-for-node-ready.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/sh\n      until (curl -sL http://localhost:10248/healthz) \u0026\u0026 [ $(curl -sL http://localhost:10248/healthz) = \"ok\" ];\n        do sleep 10 \u0026\u0026 echo \"Wait for $(hostname) kubelet to be ready\"; done;\n  - path: /usr/local/bin/install-or-upgrade-rke2.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/bash\n      set -e\n\n      # Fetch target and actual version if already installed\n      export INSTALL_RKE2_VERSION=v1.33.1+rke2r1\n            which rke2 \u003e/dev/null 2\u003e\u00261 \u0026\u0026 RKE2_VERSION=$(rke2 --version|head -1|cut -f 3 -d \" \")\n\n      # Install or upgrade\n      if ([ -z \"$RKE2_VERSION\" ]) || ([ -n \"$INSTALL_RKE2_VERSION\" ] \u0026\u0026 [ \"$INSTALL_RKE2_VERSION\" != \"$RKE2_VERSION\" ]); then\n        echo \"Installing RKE2 version $INSTALL_RKE2_VERSION\"\n        curl -sfL https://get.rke2.io | sh -\n        echo \"RKE2 installation completed\"\n      else\n        echo \"RKE2 already installed: $RKE2_VERSION\"\n      fi\n  - path: /etc/rancher/rke2/config.yaml\n    permissions: \"0600\"\n    owner: root:root\n    encoding: base64\n    content: IyBkb2NzIHJlZjogaHR0cHM6Ly9kb2NzLnJrZTIuaW8vcmVmZXJlbmNlL3NlcnZlcl9jb25maWcKCiMgQ29tbW9uCmNvbmZpZzogL2V0Yy9yYW5jaGVyL3JrZTIvY29uZmlnLnlhbWwKZGVidWc6IGZhbHNlCmRhdGEtZGlyOiAiL3Zhci9saWIvcmFuY2hlci9ya2UyIgoKIyBMaXN0ZW5lcgphZHZlcnRpc2UtYWRkcmVzczogIjEwLjE5MS4wLjk5Igp0bHMtc2FuOgogIC0gIjEwLjE5MS4wLjk5Igp0bHMtc2FuLXNlY3VyaXR5OiB0cnVlCgojIE5ldHdvcmtpbmcKY2x1c3Rlci1jaWRyOiAiMTcyLjE2LjAuMC8xMyIKc2VydmljZS1jaWRyOiAiMTcyLjI4LjAuMC8xNiIKc2VydmljZS1ub2RlLXBvcnQtcmFuZ2U6ICIzMDAwMC0zMjc2NyIKY2x1c3Rlci1kbnM6ICIxNzIuMjguMC4xMCIKY2x1c3Rlci1kb21haW46ICJjbHVzdGVyLmxvY2FsIgplZ3Jlc3Mtc2VsZWN0b3ItbW9kZTogImRpc2FibGVkIgpzZXJ2aWNlbGItbmFtZXNwYWNlOiAia3ViZS1zeXN0ZW0iCmNuaTogbm9uZQoKIyBDbGllbnQKd3JpdGUta3ViZWNvbmZpZzogIi9ldGMvcmFuY2hlci9ya2UyL3JrZTIueWFtbCIKd3JpdGUta3ViZWNvbmZpZy1tb2RlOiAiNjAwIgoKIyBDbHVzdGVyCnRva2VuOiAiYTdlZGM2NzFjN2U1NjU4NDM0OTM1ODk0NWY3YjUxZGNhNTkxMTE2MjdjMDJkOTVkY2YyN2I0ZjcxNzBmYjkyMiIKc2VydmVyOiAiaHR0cHM6Ly8xMC4xOTEuMC45OTo5MzQ1IgoKIyBTZXJ2ZXIgUm9sZXMKZGlzYWJsZS1hcGlzZXJ2ZXI6IGZhbHNlCmRpc2FibGUtY29udHJvbGxlci1tYW5hZ2VyOiBmYWxzZQpkaXNhYmxlLXNjaGVkdWxlcjogZmFsc2UKZGlzYWJsZS1ldGNkOiBmYWxzZQoKIyBGbGFncwoKIyBDb21wb25lbnRzCmRpc2FibGU6CiAgLSAicmtlMi1pbmdyZXNzLW5naW54IgogIC0gInJrZTItbWV0cmljcy1zZXJ2ZXIiCiAgLSAicmtlMi1jb3JlZG5zIgpkaXNhYmxlLXNjaGVkdWxlcjogZmFsc2UKZGlzYWJsZS1jbG91ZC1jb250cm9sbGVyOiB0cnVlCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQplbmFibGUtc2VydmljZWxiOiBmYWxzZQoKIyBBZ2VudC9Ob2RlCm5vZGUtdGFpbnQ6CiAgLSBub2RlLXJvbGUua3ViZXJuZXRlcy5pby9jb250cm9sLXBsYW5lOk5vU2NoZWR1bGUKICAtIG5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL2V0Y2Q6Tm9FeGVjdXRlCgojIEFnZW50L0ZsYWdzCg==\n\n\n\n\nruncmd:\n  - /usr/local/bin/install-or-upgrade-rke2.sh\n  - systemctl daemon-reload\n  - [ sh, -c, 'sed -i \"/^server:/d\" /etc/rancher/rke2/config.yaml']\n  - systemctl enable rke2-server.service\n  - systemctl start rke2-server.service\n  - [ sh, -c, 'until [ -f /etc/rancher/rke2/rke2.yaml ]; do echo Waiting for rke2 to start \u0026\u0026 sleep 10; done;' ]\n  - [ sh, -c, 'until [ -x /var/lib/rancher/rke2/bin/kubectl ]; do echo Waiting for kubectl bin \u0026\u0026 sleep 10; done;' ]\n  - cp /etc/rancher/rke2/rke2.yaml /etc/rancher/rke2/rke2-remote.yaml\n  - KUBECONFIG=/etc/rancher/rke2/rke2-remote.yaml /var/lib/rancher/rke2/bin/kubectl config set-cluster default --server https://10.191.0.99:6443\n  - KUBECONFIG=/etc/rancher/rke2/rke2-remote.yaml /var/lib/rancher/rke2/bin/kubectl config rename-context default peter\n\r\n--MIMEBOUNDARY--\r\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "part"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "content"
              }
            ]
          ],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.control_plane[0]",
      "mode": "managed",
      "type": "incus_instance",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/lxc/incus\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "config": {
              "cloud-init.user-data": "Content-Type: multipart/mixed; boundary=\"MIMEBOUNDARY\"\nMIME-Version: 1.0\r\n\r\n--MIMEBOUNDARY\r\nContent-Disposition: attachment; filename=\"cloud-config.yaml\"\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/cloud-config\r\nMime-Version: 1.0\r\nX-Merge-Type: list(append)+dict(recurse_array)+str()\r\n\r\n#cloud-config\npackage_update: true\npackage_upgrade: true\npackages:\n  - curl\n  - jq\n  - tcpdump\n\nwrite_files:\n  - path: /usr/local/bin/wait-for-node-ready.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/sh\n      until (curl -sL http://localhost:10248/healthz) \u0026\u0026 [ $(curl -sL http://localhost:10248/healthz) = \"ok\" ];\n        do sleep 10 \u0026\u0026 echo \"Wait for $(hostname) kubelet to be ready\"; done;\n  - path: /usr/local/bin/install-or-upgrade-rke2.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/bash\n      set -e\n\n      # Fetch target and actual version if already installed\n      export INSTALL_RKE2_VERSION=v1.33.1+rke2r1\n            which rke2 \u003e/dev/null 2\u003e\u00261 \u0026\u0026 RKE2_VERSION=$(rke2 --version|head -1|cut -f 3 -d \" \")\n\n      # Install or upgrade\n      if ([ -z \"$RKE2_VERSION\" ]) || ([ -n \"$INSTALL_RKE2_VERSION\" ] \u0026\u0026 [ \"$INSTALL_RKE2_VERSION\" != \"$RKE2_VERSION\" ]); then\n        echo \"Installing RKE2 version $INSTALL_RKE2_VERSION\"\n        curl -sfL https://get.rke2.io | sh -\n        echo \"RKE2 installation completed\"\n      else\n        echo \"RKE2 already installed: $RKE2_VERSION\"\n      fi\n  - path: /etc/rancher/rke2/config.yaml\n    permissions: \"0600\"\n    owner: root:root\n    encoding: base64\n    content: IyBkb2NzIHJlZjogaHR0cHM6Ly9kb2NzLnJrZTIuaW8vcmVmZXJlbmNlL3NlcnZlcl9jb25maWcKCiMgQ29tbW9uCmNvbmZpZzogL2V0Yy9yYW5jaGVyL3JrZTIvY29uZmlnLnlhbWwKZGVidWc6IGZhbHNlCmRhdGEtZGlyOiAiL3Zhci9saWIvcmFuY2hlci9ya2UyIgoKIyBMaXN0ZW5lcgphZHZlcnRpc2UtYWRkcmVzczogIjEwLjE5MS4wLjk5Igp0bHMtc2FuOgogIC0gIjEwLjE5MS4wLjk5Igp0bHMtc2FuLXNlY3VyaXR5OiB0cnVlCgojIE5ldHdvcmtpbmcKY2x1c3Rlci1jaWRyOiAiMTcyLjE2LjAuMC8xMyIKc2VydmljZS1jaWRyOiAiMTcyLjI4LjAuMC8xNiIKc2VydmljZS1ub2RlLXBvcnQtcmFuZ2U6ICIzMDAwMC0zMjc2NyIKY2x1c3Rlci1kbnM6ICIxNzIuMjguMC4xMCIKY2x1c3Rlci1kb21haW46ICJjbHVzdGVyLmxvY2FsIgplZ3Jlc3Mtc2VsZWN0b3ItbW9kZTogImRpc2FibGVkIgpzZXJ2aWNlbGItbmFtZXNwYWNlOiAia3ViZS1zeXN0ZW0iCmNuaTogbm9uZQoKIyBDbGllbnQKd3JpdGUta3ViZWNvbmZpZzogIi9ldGMvcmFuY2hlci9ya2UyL3JrZTIueWFtbCIKd3JpdGUta3ViZWNvbmZpZy1tb2RlOiAiNjAwIgoKIyBDbHVzdGVyCnRva2VuOiAiYTdlZGM2NzFjN2U1NjU4NDM0OTM1ODk0NWY3YjUxZGNhNTkxMTE2MjdjMDJkOTVkY2YyN2I0ZjcxNzBmYjkyMiIKc2VydmVyOiAiaHR0cHM6Ly8xMC4xOTEuMC45OTo5MzQ1IgoKIyBTZXJ2ZXIgUm9sZXMKZGlzYWJsZS1hcGlzZXJ2ZXI6IGZhbHNlCmRpc2FibGUtY29udHJvbGxlci1tYW5hZ2VyOiBmYWxzZQpkaXNhYmxlLXNjaGVkdWxlcjogZmFsc2UKZGlzYWJsZS1ldGNkOiBmYWxzZQoKIyBGbGFncwoKIyBDb21wb25lbnRzCmRpc2FibGU6CiAgLSAicmtlMi1pbmdyZXNzLW5naW54IgogIC0gInJrZTItbWV0cmljcy1zZXJ2ZXIiCiAgLSAicmtlMi1jb3JlZG5zIgpkaXNhYmxlLXNjaGVkdWxlcjogZmFsc2UKZGlzYWJsZS1jbG91ZC1jb250cm9sbGVyOiB0cnVlCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQplbmFibGUtc2VydmljZWxiOiBmYWxzZQoKIyBBZ2VudC9Ob2RlCm5vZGUtdGFpbnQ6CiAgLSBub2RlLXJvbGUua3ViZXJuZXRlcy5pby9jb250cm9sLXBsYW5lOk5vU2NoZWR1bGUKICAtIG5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL2V0Y2Q6Tm9FeGVjdXRlCgojIEFnZW50L0ZsYWdzCg==\n\n\n\n\nruncmd:\n  - /usr/local/bin/install-or-upgrade-rke2.sh\n  - systemctl daemon-reload\n  - [ sh, -c, 'sed -i \"/^server:/d\" /etc/rancher/rke2/config.yaml']\n  - systemctl enable rke2-server.service\n  - systemctl start rke2-server.service\n  - [ sh, -c, 'until [ -f /etc/rancher/rke2/rke2.yaml ]; do echo Waiting for rke2 to start \u0026\u0026 sleep 10; done;' ]\n  - [ sh, -c, 'until [ -x /var/lib/rancher/rke2/bin/kubectl ]; do echo Waiting for kubectl bin \u0026\u0026 sleep 10; done;' ]\n  - cp /etc/rancher/rke2/rke2.yaml /etc/rancher/rke2/rke2-remote.yaml\n  - KUBECONFIG=/etc/rancher/rke2/rke2-remote.yaml /var/lib/rancher/rke2/bin/kubectl config set-cluster default --server https://10.191.0.99:6443\n  - KUBECONFIG=/etc/rancher/rke2/rke2-remote.yaml /var/lib/rancher/rke2/bin/kubectl config rename-context default peter\n\r\n--MIMEBOUNDARY--\r\n"
            },
            "description": "",
            "device": [],
            "ephemeral": false,
            "file": [],
            "image": "images:ubuntu/24.04/cloud",
            "ipv4_address": "10.191.0.3",
            "ipv6_address": null,
            "mac_address": "10:66:6a:9c:1f:ab",
            "name": "control-plane-0cf93cfe",
            "profiles": [
              "kubernetes-2-4-20"
            ],
            "project": "apps",
            "remote": null,
            "running": true,
            "source_file": null,
            "source_instance": null,
            "status": "Running",
            "target": "nataliagranato",
            "type": "virtual-machine",
            "wait_for": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "module.control_plane.data.cloudinit_config.this",
            "module.control_plane.random_id.this",
            "random_bytes.token"
          ]
        }
      ]
    },
    {
      "module": "module.control_plane[0]",
      "mode": "managed",
      "type": "random_id",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64_std": "DPk8/g==",
            "b64_url": "DPk8_g",
            "byte_length": 4,
            "dec": "217660670",
            "hex": "0cf93cfe",
            "id": "DPk8_g",
            "keepers": null,
            "prefix": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.worker[0]",
      "mode": "data",
      "type": "cloudinit_config",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/cloudinit\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": false,
            "boundary": "MIMEBOUNDARY",
            "gzip": false,
            "id": "3129074631",
            "part": [
              {
                "content": "#cloud-config\npackage_update: true\npackage_upgrade: true\npackages:\n  - curl\n  - jq\n  - tcpdump\n\nwrite_files:\n  - path: /usr/local/bin/wait-for-node-ready.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/sh\n      until (curl -sL http://localhost:10248/healthz) \u0026\u0026 [ $(curl -sL http://localhost:10248/healthz) = \"ok\" ];\n        do sleep 10 \u0026\u0026 echo \"Wait for $(hostname) kubelet to be ready\"; done;\n  - path: /usr/local/bin/install-or-upgrade-rke2.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/bash\n      set -e\n\n      # Fetch target and actual version if already installed\n      export INSTALL_RKE2_VERSION=v1.33.1+rke2r1\n            export INSTALL_RKE2_TYPE=agent\n            which rke2 \u003e/dev/null 2\u003e\u00261 \u0026\u0026 RKE2_VERSION=$(rke2 --version|head -1|cut -f 3 -d \" \")\n\n      # Install or upgrade\n      if ([ -z \"$RKE2_VERSION\" ]) || ([ -n \"$INSTALL_RKE2_VERSION\" ] \u0026\u0026 [ \"$INSTALL_RKE2_VERSION\" != \"$RKE2_VERSION\" ]); then\n        echo \"Installing RKE2 version $INSTALL_RKE2_VERSION\"\n        curl -sfL https://get.rke2.io | sh -\n        echo \"RKE2 installation completed\"\n      else\n        echo \"RKE2 already installed: $RKE2_VERSION\"\n      fi\n  - path: /etc/rancher/rke2/config.yaml\n    permissions: \"0600\"\n    owner: root:root\n    encoding: base64\n    content: IyBkb2NzIHJlZjogaHR0cHM6Ly9kb2NzLnJrZTIuaW8vcmVmZXJlbmNlL2xpbnV4X2FnZW50X2NvbmZpZwoKIyBDb21tb24KY29uZmlnOiAvZXRjL3JhbmNoZXIvcmtlMi9jb25maWcueWFtbApkZWJ1ZzogZmFsc2UKZGF0YS1kaXI6ICIvdmFyL2xpYi9yYW5jaGVyL3JrZTIiCgojIENsdXN0ZXIKdG9rZW46ICJhN2VkYzY3MWM3ZTU2NTg0MzQ5MzU4OTQ1ZjdiNTFkY2E1OTExMTYyN2MwMmQ5NWRjZjI3YjRmNzE3MGZiOTIyIgpzZXJ2ZXI6ICJodHRwczovLzEwLjE5MS4wLjk5OjkzNDUiCgojIE5vZGUKCiMgUnVudGltZQpwcml2YXRlLXJlZ2lzdHJ5OiAiL2V0Yy9yYW5jaGVyL3JrZTIvcmVnaXN0cmllcy55YW1sIgoKIyBDb21wb25lbnRzCg==\n\n\n\nruncmd:\n  - /usr/local/bin/install-or-upgrade-rke2.sh\n  - systemctl daemon-reload\n  - systemctl enable rke2-agent.service\n  - systemctl start rke2-agent.service\n",
                "content_type": "text/cloud-config",
                "filename": "cloud-config.yaml",
                "merge_type": "list(append)+dict(recurse_array)+str()"
              }
            ],
            "rendered": "Content-Type: multipart/mixed; boundary=\"MIMEBOUNDARY\"\nMIME-Version: 1.0\r\n\r\n--MIMEBOUNDARY\r\nContent-Disposition: attachment; filename=\"cloud-config.yaml\"\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/cloud-config\r\nMime-Version: 1.0\r\nX-Merge-Type: list(append)+dict(recurse_array)+str()\r\n\r\n#cloud-config\npackage_update: true\npackage_upgrade: true\npackages:\n  - curl\n  - jq\n  - tcpdump\n\nwrite_files:\n  - path: /usr/local/bin/wait-for-node-ready.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/sh\n      until (curl -sL http://localhost:10248/healthz) \u0026\u0026 [ $(curl -sL http://localhost:10248/healthz) = \"ok\" ];\n        do sleep 10 \u0026\u0026 echo \"Wait for $(hostname) kubelet to be ready\"; done;\n  - path: /usr/local/bin/install-or-upgrade-rke2.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/bash\n      set -e\n\n      # Fetch target and actual version if already installed\n      export INSTALL_RKE2_VERSION=v1.33.1+rke2r1\n            export INSTALL_RKE2_TYPE=agent\n            which rke2 \u003e/dev/null 2\u003e\u00261 \u0026\u0026 RKE2_VERSION=$(rke2 --version|head -1|cut -f 3 -d \" \")\n\n      # Install or upgrade\n      if ([ -z \"$RKE2_VERSION\" ]) || ([ -n \"$INSTALL_RKE2_VERSION\" ] \u0026\u0026 [ \"$INSTALL_RKE2_VERSION\" != \"$RKE2_VERSION\" ]); then\n        echo \"Installing RKE2 version $INSTALL_RKE2_VERSION\"\n        curl -sfL https://get.rke2.io | sh -\n        echo \"RKE2 installation completed\"\n      else\n        echo \"RKE2 already installed: $RKE2_VERSION\"\n      fi\n  - path: /etc/rancher/rke2/config.yaml\n    permissions: \"0600\"\n    owner: root:root\n    encoding: base64\n    content: IyBkb2NzIHJlZjogaHR0cHM6Ly9kb2NzLnJrZTIuaW8vcmVmZXJlbmNlL2xpbnV4X2FnZW50X2NvbmZpZwoKIyBDb21tb24KY29uZmlnOiAvZXRjL3JhbmNoZXIvcmtlMi9jb25maWcueWFtbApkZWJ1ZzogZmFsc2UKZGF0YS1kaXI6ICIvdmFyL2xpYi9yYW5jaGVyL3JrZTIiCgojIENsdXN0ZXIKdG9rZW46ICJhN2VkYzY3MWM3ZTU2NTg0MzQ5MzU4OTQ1ZjdiNTFkY2E1OTExMTYyN2MwMmQ5NWRjZjI3YjRmNzE3MGZiOTIyIgpzZXJ2ZXI6ICJodHRwczovLzEwLjE5MS4wLjk5OjkzNDUiCgojIE5vZGUKCiMgUnVudGltZQpwcml2YXRlLXJlZ2lzdHJ5OiAiL2V0Yy9yYW5jaGVyL3JrZTIvcmVnaXN0cmllcy55YW1sIgoKIyBDb21wb25lbnRzCg==\n\n\n\nruncmd:\n  - /usr/local/bin/install-or-upgrade-rke2.sh\n  - systemctl daemon-reload\n  - systemctl enable rke2-agent.service\n  - systemctl start rke2-agent.service\n\r\n--MIMEBOUNDARY--\r\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "part"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "content"
              }
            ]
          ],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.worker[0]",
      "mode": "managed",
      "type": "incus_instance",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/lxc/incus\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "config": {
              "cloud-init.user-data": "Content-Type: multipart/mixed; boundary=\"MIMEBOUNDARY\"\nMIME-Version: 1.0\r\n\r\n--MIMEBOUNDARY\r\nContent-Disposition: attachment; filename=\"cloud-config.yaml\"\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/cloud-config\r\nMime-Version: 1.0\r\nX-Merge-Type: list(append)+dict(recurse_array)+str()\r\n\r\n#cloud-config\npackage_update: true\npackage_upgrade: true\npackages:\n  - curl\n  - jq\n  - tcpdump\n\nwrite_files:\n  - path: /usr/local/bin/wait-for-node-ready.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/sh\n      until (curl -sL http://localhost:10248/healthz) \u0026\u0026 [ $(curl -sL http://localhost:10248/healthz) = \"ok\" ];\n        do sleep 10 \u0026\u0026 echo \"Wait for $(hostname) kubelet to be ready\"; done;\n  - path: /usr/local/bin/install-or-upgrade-rke2.sh\n    permissions: \"0755\"\n    owner: root:root\n    content: |\n      #!/bin/bash\n      set -e\n\n      # Fetch target and actual version if already installed\n      export INSTALL_RKE2_VERSION=v1.33.1+rke2r1\n            export INSTALL_RKE2_TYPE=agent\n            which rke2 \u003e/dev/null 2\u003e\u00261 \u0026\u0026 RKE2_VERSION=$(rke2 --version|head -1|cut -f 3 -d \" \")\n\n      # Install or upgrade\n      if ([ -z \"$RKE2_VERSION\" ]) || ([ -n \"$INSTALL_RKE2_VERSION\" ] \u0026\u0026 [ \"$INSTALL_RKE2_VERSION\" != \"$RKE2_VERSION\" ]); then\n        echo \"Installing RKE2 version $INSTALL_RKE2_VERSION\"\n        curl -sfL https://get.rke2.io | sh -\n        echo \"RKE2 installation completed\"\n      else\n        echo \"RKE2 already installed: $RKE2_VERSION\"\n      fi\n  - path: /etc/rancher/rke2/config.yaml\n    permissions: \"0600\"\n    owner: root:root\n    encoding: base64\n    content: IyBkb2NzIHJlZjogaHR0cHM6Ly9kb2NzLnJrZTIuaW8vcmVmZXJlbmNlL2xpbnV4X2FnZW50X2NvbmZpZwoKIyBDb21tb24KY29uZmlnOiAvZXRjL3JhbmNoZXIvcmtlMi9jb25maWcueWFtbApkZWJ1ZzogZmFsc2UKZGF0YS1kaXI6ICIvdmFyL2xpYi9yYW5jaGVyL3JrZTIiCgojIENsdXN0ZXIKdG9rZW46ICJhN2VkYzY3MWM3ZTU2NTg0MzQ5MzU4OTQ1ZjdiNTFkY2E1OTExMTYyN2MwMmQ5NWRjZjI3YjRmNzE3MGZiOTIyIgpzZXJ2ZXI6ICJodHRwczovLzEwLjE5MS4wLjk5OjkzNDUiCgojIE5vZGUKCiMgUnVudGltZQpwcml2YXRlLXJlZ2lzdHJ5OiAiL2V0Yy9yYW5jaGVyL3JrZTIvcmVnaXN0cmllcy55YW1sIgoKIyBDb21wb25lbnRzCg==\n\n\n\nruncmd:\n  - /usr/local/bin/install-or-upgrade-rke2.sh\n  - systemctl daemon-reload\n  - systemctl enable rke2-agent.service\n  - systemctl start rke2-agent.service\n\r\n--MIMEBOUNDARY--\r\n"
            },
            "description": "",
            "device": [],
            "ephemeral": false,
            "file": [],
            "image": "images:ubuntu/24.04/cloud",
            "ipv4_address": "10.191.0.4",
            "ipv6_address": null,
            "mac_address": "10:66:6a:94:43:8e",
            "name": "worker-e00c8dfe",
            "profiles": [
              "kubernetes-2-4-20"
            ],
            "project": "apps",
            "remote": null,
            "running": true,
            "source_file": null,
            "source_instance": null,
            "status": "Running",
            "target": "nataliagranato",
            "type": "virtual-machine",
            "wait_for": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "module.worker.data.cloudinit_config.this",
            "module.worker.random_id.this",
            "random_bytes.token"
          ]
        }
      ]
    },
    {
      "module": "module.worker[0]",
      "mode": "managed",
      "type": "random_id",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64_std": "4AyN/g==",
            "b64_url": "4AyN_g",
            "byte_length": 4,
            "dec": "3758919166",
            "hex": "e00c8dfe",
            "id": "4AyN_g",
            "keepers": null,
            "prefix": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    }
  ],
  "check_results": null
}
